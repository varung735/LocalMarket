"use strict";

var _cors = _interopRequireDefault(require("cors"));

var _mongoose = _interopRequireDefault(require("mongoose"));

var _api = require("./api");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import bodyParser from 'body-parser';
_mongoose.default.Promise = global.Promise;

_mongoose.default.connect('mongodb://localhost/LocalMarket');

const bodyParser = require('body-parser');

const express = require('express');

const app = express();
const PORT = 3000;
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
  extended: false
}));
app.use((0, _cors.default)());
app.get('/', (req, res) => {
  res.json({
    msg: 'API Running'
  });
});
app.listen(PORT, () => {
  console.log(`Server is running at port number ${PORT}`);
});
app.use('/main', _api.mainRouter);
app.use((req, res, next) => {
  const error = new Error("Not Found");
  error.status = 404;
  error.message = "Invalid Route";
  next(error);
});
app.use((error, req, res, next) => {
  res.status(error.status || 500);
  return res.json({
    error: {
      message: error.message
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJQcm9taXNlIiwiZ2xvYmFsIiwiY29ubmVjdCIsImJvZHlQYXJzZXIiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImFwcCIsIlBPUlQiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZ2V0IiwicmVxIiwicmVzIiwibXNnIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsIm1haW5Sb3V0ZXIiLCJuZXh0IiwiZXJyb3IiLCJFcnJvciIsInN0YXR1cyIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFIQTtBQUtBQSxrQkFBU0MsT0FBVCxHQUFtQkMsTUFBTSxDQUFDRCxPQUExQjs7QUFDQUQsa0JBQVNHLE9BQVQsQ0FBaUIsaUNBQWpCOztBQUVBLE1BQU1DLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNRSxHQUFHLEdBQUdELE9BQU8sRUFBbkI7QUFDQSxNQUFNRSxJQUFJLEdBQUcsSUFBYjtBQUVBRCxHQUFHLENBQUNFLEdBQUosQ0FBUUwsVUFBVSxDQUFDTSxJQUFYLEVBQVI7QUFDQUgsR0FBRyxDQUFDRSxHQUFKLENBQVFMLFVBQVUsQ0FBQ08sVUFBWCxDQUFzQjtBQUMxQkMsRUFBQUEsUUFBUSxFQUFFO0FBRGdCLENBQXRCLENBQVI7QUFJQUwsR0FBRyxDQUFDRSxHQUFKLENBQVEsb0JBQVI7QUFFQUYsR0FBRyxDQUFDTSxHQUFKLENBQVEsR0FBUixFQUFZLENBQUNDLEdBQUQsRUFBS0MsR0FBTCxLQUFhO0FBQ3JCQSxFQUFBQSxHQUFHLENBQUNMLElBQUosQ0FBUztBQUNMTSxJQUFBQSxHQUFHLEVBQUU7QUFEQSxHQUFUO0FBR0gsQ0FKRDtBQU1BVCxHQUFHLENBQUNVLE1BQUosQ0FBV1QsSUFBWCxFQUFpQixNQUFNO0FBQ25CVSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxvQ0FBbUNYLElBQUssRUFBckQ7QUFDSCxDQUZEO0FBSUFELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLE9BQVIsRUFBaUJXLGVBQWpCO0FBRUFiLEdBQUcsQ0FBQ0UsR0FBSixDQUFRLENBQUNLLEdBQUQsRUFBS0MsR0FBTCxFQUFTTSxJQUFULEtBQWtCO0FBQ3RCLFFBQU1DLEtBQUssR0FBRyxJQUFJQyxLQUFKLENBQVUsV0FBVixDQUFkO0FBQ0FELEVBQUFBLEtBQUssQ0FBQ0UsTUFBTixHQUFlLEdBQWY7QUFDQUYsRUFBQUEsS0FBSyxDQUFDRyxPQUFOLEdBQWdCLGVBQWhCO0FBQ0FKLEVBQUFBLElBQUksQ0FBQ0MsS0FBRCxDQUFKO0FBQ0gsQ0FMRDtBQU1BZixHQUFHLENBQUNFLEdBQUosQ0FBUSxDQUFDYSxLQUFELEVBQU9SLEdBQVAsRUFBV0MsR0FBWCxFQUFlTSxJQUFmLEtBQXdCO0FBQzVCTixFQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBV0YsS0FBSyxDQUFDRSxNQUFOLElBQWdCLEdBQTNCO0FBQ0EsU0FBT1QsR0FBRyxDQUFDTCxJQUFKLENBQVM7QUFDWlksSUFBQUEsS0FBSyxFQUFDO0FBQ0ZHLE1BQUFBLE9BQU8sRUFBRUgsS0FBSyxDQUFDRztBQURiO0FBRE0sR0FBVCxDQUFQO0FBS0gsQ0FQRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XHJcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCB7IG1haW5Sb3V0ZXIgfSBmcm9tICcuL2FwaSc7XHJcblxyXG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XHJcbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3QvTG9jYWxNYXJrZXQnKTtcclxuXHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmNvbnN0IFBPUlQgPSAzMDAwO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcclxuICAgIGV4dGVuZGVkOiBmYWxzZVxyXG59KSk7XHJcblxyXG5hcHAudXNlKGNvcnMoKSk7XHJcblxyXG5hcHAuZ2V0KCcvJywocmVxLHJlcykgPT4ge1xyXG4gICAgcmVzLmpzb24oe1xyXG4gICAgICAgIG1zZzogJ0FQSSBSdW5uaW5nJ1xyXG4gICAgfSlcclxufSlcclxuXHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIGF0IHBvcnQgbnVtYmVyICR7UE9SVH1gKTtcclxufSlcclxuXHJcbmFwcC51c2UoJy9tYWluJywgbWFpblJvdXRlcik7XHJcblxyXG5hcHAudXNlKChyZXEscmVzLG5leHQpID0+IHtcclxuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFwiTm90IEZvdW5kXCIpO1xyXG4gICAgZXJyb3Iuc3RhdHVzID0gNDA0O1xyXG4gICAgZXJyb3IubWVzc2FnZSA9IFwiSW52YWxpZCBSb3V0ZVwiO1xyXG4gICAgbmV4dChlcnJvcik7XHJcbn0pXHJcbmFwcC51c2UoKGVycm9yLHJlcSxyZXMsbmV4dCkgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyhlcnJvci5zdGF0dXMgfHwgNTAwKTtcclxuICAgIHJldHVybiByZXMuanNvbih7XHJcbiAgICAgICAgZXJyb3I6e1xyXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSkiXX0=